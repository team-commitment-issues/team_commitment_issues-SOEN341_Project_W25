name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    name: Backend CI
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:4.4
        ports:
          - 27017:27017

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Create .env.test file
        run: |
          echo MONGO_URI=mongodb://localhost:27017/testdb > ChatHavenApp/backend/.env.test
          echo JWT_SECRET=yFFnLrnV4a+Widw1PFEVHrp05etyl34CFbOp2LJFyToVeC3A32kcZH7VIvYW5IUmHzeOKzv4X5He/+UUG2Ieiw== >> ChatHavenApp/backend/.env.test
          echo NODE_ENV=test >> ChatHavenApp/backend/.env.test

      - name: Create .env file
        run: |
          echo PORT=5000 > ChatHavenApp/backend/.env
          echo MONGO_URI=mongodb://localhost:27017/chathavendb >> ChatHavenApp/backend/.env
          echo JWT_SECRET=8s8PC9N2XVWmbotAnx19ct34boBhzv0pCV7RxcGOtUp9+nGj2Inc0SIyBCYt0t+1o+GT2Oa5ucFCz2xQ8xA8HA== >> ChatHavenApp/backend/.env
          echo NODE_ENV=development >> ChatHavenApp/backend/.env

      - name: Clean npm cache and node_modules
        run: |
          cd ChatHavenApp
          cd backend
          npm cache clean --force
          rm -rf node_modules
          rm -f package-lock.json

      - name: Install dependencies
        run: |
          cd ChatHavenApp
          cd backend
          npm install

      - name: Run tests
        run: |
          cd ChatHavenApp
          cd backend
          npm run build
          npm run test

      - name: Build backend
        run: |
          cd ChatHavenApp
          cd backend
          npm run build

  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Clean npm cache and node_modules
        run: |
          cd ChatHavenApp
          cd frontend
          npm cache clean --force
          rm -rf node_modules
          rm -f package-lock.json

      - name: Install dependencies
        run: |
          cd ChatHavenApp
          cd frontend
          npm install --legacy-peer-deps

      - name: Build frontend
        run: |
          cd ChatHavenApp
          cd frontend
          npm run build